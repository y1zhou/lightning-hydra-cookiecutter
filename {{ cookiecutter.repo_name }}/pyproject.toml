[project]
name = "src"
version = "0.0.1"
description = "{{ cookiecutter.description }}"
authors = [
  { name = "{{ cookiecutter.author_name }}" },
  { email = "{{ cookiecutter.user_email }}" },
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">={{ cookiecutter.python_version }},<4"

[project.urls]
documentation = "https://example.com/"
repository = "{{ cookiecutter.repo_url }}"

[project.scripts]
train_command = "src.train:main"
eval_command = "src.eval:main"

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "coverage<6.4",
  "coverage[toml]<6.4",
  "hypothesis>=6.47.0",
  "pytest-dotenv>=0.5.2",
]
doc = [
  "mkdocs-material",
  "mkdocstrings[python]>=0.18",
  "mkdocs-gen-files",
  "mkdocs-literate-nav",
]
dev = ["pre-commit"]

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--durations=0",
  "--strict-markers",
  "--doctest-modules",
]
filterwarnings = ["ignore::DeprecationWarning", "ignore::UserWarning"]
log_cli = "True"
markers = ["slow: slow tests"]
minversion = "6.0"
testpaths = "tests/"

[tool.coverage.report]
exclude_lines = [
  "pragma: nocover",
  "raise NotImplementedError",
  "raise NotImplementedError()",
  "if __name__ == .__main__.:",
]
